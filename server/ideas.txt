Ý tưởng làm phần update:
    - Client: Khi bấm update, client sẽ thực hiện 3 việc :
        + Kiểm tra thông tin sau thay đổi xem có khác biệt
        (Vd: dùng equal so sánh detailState(hiện tại) và
        user.infor trong object xem có giống nhau không)
        + Nếu có mục khác biệt, thì cho nó vào 1 object mới
        (Vd: object user ban đầu có 4 fields: name, address
        age, phone_num. Các fields có data thay đoi, name
        address thì các field này được thêm vào object mới
        userUpdateDetail:
            {
                name: 'Nguyễn Văn A',
                address: 'Hà Nội'
            }
        )
        + Chuyển object userUpdateDetail tới server
    - Server : Nhận và xử lý thông tin update:
        * Middleware(kiểm tra)
            + kiểm tra token
            + Kiểm tra requireField
            + kiểm tra checkMessage
            + kiểm tra object có null không
                Nếu có báo object null
            + kiểm tra, làm sạch dữ liệu trong object (không có ký tự đặc biệt)
                Nếu có thì báo dữ liệu ko hợp liệu
                không thì next
        * Controller
            + Lấy id để tìm và update model
            + loop lấy từng dữ liệu ra và add vào db 
            + trả về thông tin update thành công


Tạo board : 


Về changePassword: trường hợp hiện tại đang có searh tài khoản bằng email, trông giống như quên password hơn là change sau đăng nhập,
=> Nên chỉnh lại tìm bằng id
        + Tính năng thêm: change password và gửi thông tin đổi pass về gmail

=> nên có thêm setup smtp



cần trước : 



can update them : delete

// can lam them



Tìm hiểu về HTTPOnly Cookie và áp dụng

User controller:

1.them user mới vào bảng trong use case user

user_id
board_id
new_user_id

tìm board có tồn tại không, 
xét xem creator của board có phải là user_id không, 
tìm xem new_user_id có tồn tại không
nếu không báo lỗi 
kiểm tra new_user_id có trong board chưa
nếu không thì thêm vào với role là VIEWER
thêm bảng đó vào array board của new_user_id với role member

2.GetAllUserInBoard

user_id, board_id



tìm xem 



=> việc tìm kiếm xem id của 1 đối tượng không khá nhiều
có nên dùng 1 hàm riêng để kiểm tra và trả vê thông tin

Board controller:
Về tính năng moveList :
về cơ bản thì là thay đổi vị trí của các list trong board




API: 
    - Auth :
        + /api/auth/register : đăng ký người dùng mới
            request cần :
                {
                    "user_full_name" : "",
                    "user_email" : "",
                    "user_password" : "",
                    "user_avatar_url" : "",
                    "checkMessage" : "Register new account"
                }
        + /api/auth/login : đăng nhập người dùng
            request cần :
                {
                    "user_email" : "", 
                    "user_password" : "", 
                    "checkMessage" : "Login to account"
                }
        + /api/auth/changePassword : đổi mật khẩu
            request cần : 
            token cho header
                {
                    "user_email" : "",
                    "user_password" : "",
                    "user_last_password" : "",
                    "checkMessage" : "Change password"
                }
    - User
        + /api/user/getProfile : lấy thông tin người dùng
            request cần :
                {
                    "checkMessage" : "Get user profile"
                }
        + /api/user/updateProfile : cập nhật thông tin người dùng
            request cần :
                {
                    "user_update_details" : {}, 
                    (nạp vào 1 object)
                    "checkMessage" : "Update user profile"
                }
    - Board
        + /api/board/createBoard : tạo bảng(Project) mới
            request cần :
                {
                    "board_title" : "",
                    "board_description" : "",
                    "board_is_public" : "",
                    "board_collaborators" : [],
                    "board_list" : [],
                    "checkMessage" : "Create new board"
                }
        + /api/board/getBoard : lấy thông tin bảng nhất định
            request cần :
                {
                    "board_id", 
                    "checkMessage" : "Get board"
                }
        + /api/board/getBoardsByUserId : lấy tất cả các bảng theo user id
            request cần :
                {
                    "checkMessage" : "Get boards by user id"
                }
        + /api/board/updateBoard : cập nhật thông tin bảng
            request cần :
                {
                    "board_id", 
                    "board_update_details"
                    "checkMessage" : "Update board"
                }
        + /api/board/deleteBoard : xóa bảng
            request cần :
                {
                    "board_id" , 
                    "checkMessage" : "Delete board"
                }





Nên tạo thêm chức năng để kiểm tra xác thực của user đối
với hành động liên quan tới bảng board:

    - user là admin của board thì có thể làm gì
    - user là thành viên của board thì có thể làm gì
    

thêm chức năng lưu trữ board:
    + thêm 1 mục vào model : isClosed
    + nếu có thì các thành viên không phải là creator thì
    ko còn được tác động lên board
    hoặc khi bấm nút closed thì các role thành viên chuyển thành VIEWER
    

Xem xét về thành phần numercial number trong model list mục list_cards liệu có cần thiết không
    - problem xuất hiện do khi muốn dời card từ list cũ sang 1 list mới
    - tức là sẽ xóa đi thông tin đó trên list cũ và thêm nó vào list mới
    - mặc định theo usecase thì sẽ phải thêm card đó vào cuối list_cards mới 
    - nhưng khi đó xóa ở list_cards cũ thì sẽ cần cập nhật lại numercial number cho các id card đc lưu phía sau



notification system:
- khi có 1 hành động thực hiện, dựa theo thực thể mà hành động đó tác dụng lên để quyết định phạm vi thông báo sẽ được tạo. 
Phạm vi sẽ là số người có liên quan đến thông báo. Thông báo sẽ được gửi qua socket.io. Nếu người nhận không online thì sẽ Nhận
được thông báo sau khi đăng nhập.
=> Model thông báo

{
  "_id": "notif123",
  "userIds": "user456",
  "title": "You were mentioned in a comment",
  "message": `$ mentioned $ in task 'Fix UI bug'`,
  "type": "mention",
  "referenceId": "task789",
  "createdAt": "2025-05-21T09:00:00Z",
  "senderId": "user123",
}
