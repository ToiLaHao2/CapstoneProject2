ngày 10/2/2025 -> 16/2/2025
    - BE :
        + Hoàn thiện phần response xử lý thành công và báo lỗi
        + Hoàn thiện các API thực hiện chức năng cho user 
    - FE :
        + Xử lý lại context (làm việc với api, xử lý lỗi)
        + Xử lý các lỗi response xử lý dữ liệu và CSS nếu cần
        + Thêm tính năng upload hình

note : 
    - axios : xử lý lỗi từ phía API dễ hơn, không cần check status code nhiều
              các code 200 được thông qua nhanh hơn, các code 4xx 5xx được đưa
              vào catch error của try catch
            

về việc upload Avatar:

    - usecase 1 : sau khi đăng ký thành công, sẽ có giao diện thông báo hỏi người dùng có muốn upload ảnh đại diện hay không
                        + nếu có : thì người dùng sẽ thực hiện upload ảnh
                        + nếu không : thì người dùng sẽ được chọn nút cancle chuyển đến trang chủ
    - usecase 2 : khi người dùng chọn vào view profile sẽ có nút upload ảnh đại diện

về việc hiện ảnh đại diện:
    - ảnh đại diện sẽ được hiện trong khu vực về thông tin người dùng. Thay vì mặc định là hình tròn với chữ cái thể hiện tên của người dùng thì sẽ 
    dùng thẻ img để hiện ảnh đại diện. Nếu người dùng chưa upload ảnh đại diện thì sẽ hiện ảnh mặc định.




Thay đổi lại middleware cho chuẩn hơn
    thay bằng 
        auth.middleware
        error.middleware
        logger.middleware
        upload.middleware
        validate.middleware 
    thay vì các middleware cho từng cái như trước




làm thêm về xử lý trong task
- card : làm về AddCheckListsToCard

về nút chat trong tab board của FE
khi bấm sẽ thực hiện nhiệm vụ

usecase khi ấn nút chat trong tab board để vào conversation
1. gửi request kiểm tra xem đã có conversation chưa (để tiết kiệm thì nên gửi tới endpoint getConversation)
2. nếu có thì sẽ hiện ra tab chat OR gửi ra thông báo chưa có và hỏi bạn có muốn tạo mới không


usecase: user mới được add vào board nhưng chưa add vào conversation
1. user khi bấm chat now cũng gửi request tới server
2. server check nhưng không thấy user thuộc conversation
3. server báo về cho ui
4. ui báo người dùng chưa tham gia vào board và có 2 nút join now or cancel.
5. người dùng bấm join now
6. ui gửi request tới server
7. server đưa user vào hàng chờ.
8. server gửi thông báo tới creator.
9. creator bấm accept
10. user được thêm vào conversation.

usecase: creator thêm user đã add vào conversation


[2025-06-17 00:00:02] ERROR: Failed to notify collaborators for new member in board 68504d8b5b3b3f9bbec8baa6
[2025-06-17 00:00:02] ERROR: notify(): Notification validation failed: notification_reference: Cast to string failed for value "{ type: 'BOARD', id: new ObjectId('68504d8b5b3b3f9bbec8baa6') }" (type Object) at path "notification_reference"
[2025-06-17 00:00:02] ERROR: Failed to notify new member for board 68504d8b5b3b3f9bbec8baa6

gửi thông tin mới cho các thành viên
for (let collaborator of collaboratorsBeforeAdd) {
            if (onlineUsers.has(collaborator.board_collaborator_id)) {
                const socketId = onlineUsers.get(collaborator.board_collaborator_id);
                await sendToSocket(socketId, "board:member:added", {
                    board_id: board_id,
                    member_id: member_id,
                    member_role: member_role
                })
            }
        }

gửi thông tin cho 1 thành viên

if (onlineUsers.has(member._id.toString())) {
            const socketId = onlineUsers.get(member._id.toString());
            console.log(socketId, "is online");
            await sendToSocket(socketId, "board:newMember:added", {
                board: updatedBoard,
            })
        }

công thức đặt tên cho socket.emit

từ { đối tượng }:đến { đối tượng }: { hành động }